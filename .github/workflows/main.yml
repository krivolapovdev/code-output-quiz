name: Build and Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    env:
      IMAGE_TAG: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Bake & Push All Images
        uses: docker/bake-action@v6
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG: ${{ github.ref_name }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        with:
          push: true
          files: ./docker-bake.hcl

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: docker-compose.yml
          target: ~/

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~

            export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
            export GRAFANA_ADMIN_USER="${{ secrets.GRAFANA_ADMIN_USER }}"
            export GRAFANA_ADMIN_PASSWORD="${{ secrets.GRAFANA_ADMIN_PASSWORD }}"
            export MAILJET_PUBLIC_KEY="${{ secrets.MAILJET_PUBLIC_KEY }}"
            export MAILJET_PRIVATE_KEY="${{ secrets.MAILJET_PRIVATE_KEY }}"
            export MAILJET_SENDER_EMAIL="${{ secrets.MAILJET_SENDER_EMAIL }}"
            export DEEPSEEK_API_KEY="${{ secrets.DEEPSEEK_API_KEY }}"
            export JWT_SECRET_KEY="$(uuidgen)$(uuidgen)$(uuidgen)"

            docker compose pull
            docker image prune -f
            docker compose down --remove-orphans
            docker compose up -d
