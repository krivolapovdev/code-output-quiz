name: Build and Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    env:
      IMAGE_TAG: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push config-server Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/config-server/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/config-server:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/config-server:latest

      - name: Build & Push eureka-server Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/eureka-server/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/eureka-server:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/eureka-server:latest

      - name: Build & Push auth-service Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/auth-service/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest

      - name: Build & Push notification-service Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/notification-service/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/notification-service:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/notification-service:latest

      - name: Build & Push quiz-service Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/quiz-service/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/quiz-service:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/quiz-service:latest

      - name: Build & Push user-service Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/user-service/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest

      - name: Build & Push api-gateway Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./infrastructure/docker/api-gateway/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

      - name: Build & Push nginx Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
          build-args: |
                VITE_API_URL=https://code-output-quiz.ru/

      - name: Build & Push Prometheus Image
        uses: docker/build-push-action@v5
        with:
          context: ./infrastructure/docker/prometheus
          file: ./infrastructure/docker/prometheus/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/prometheus:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/prometheus:latest

      - name: Build & Push Loki Image
        uses: docker/build-push-action@v5
        with:
          context: ./infrastructure/docker/loki
          file: ./infrastructure/docker/loki/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/loki:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/loki:latest

      - name: Build & Push grafana Image
        uses: docker/build-push-action@v5
        with:
          context: ./infrastructure/docker/grafana
          file: ./infrastructure/docker/grafana/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/grafana:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/grafana:latest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: docker-compose.yml
          target: ~/

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~

            export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
            export GRAFANA_ADMIN_USER="${{ secrets.GRAFANA_ADMIN_USER }}"
            export GRAFANA_ADMIN_PASSWORD="${{ secrets.GRAFANA_ADMIN_PASSWORD }}"
            export MAILJET_PUBLIC_KEY="${{ secrets.MAILJET_PUBLIC_KEY }}"
            export MAILJET_PRIVATE_KEY="${{ secrets.MAILJET_PRIVATE_KEY }}"
            export MAILJET_SENDER_EMAIL="${{ secrets.MAILJET_SENDER_EMAIL }}"
            export JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
            export DEEPSEEK_API_KEY="${{ secrets.DEEPSEEK_API_KEY }}"

            docker compose pull
            docker image prune -f
            docker compose down --remove-orphans
            docker compose up -d
