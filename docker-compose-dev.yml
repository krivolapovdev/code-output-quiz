services:
  prometheus:
    container_name: prometheus
    build:
      context: ./infrastructure/docker/prometheus
    ports:
      - "9090:9090"
    restart: no

  loki:
    container_name: loki
    build:
      context: ./infrastructure/docker/loki
    ports:
      - "3100:3100"
    restart: no

  grafana:
    container_name: grafana
    build:
      context: ./infrastructure/docker/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      prometheus:
        condition: service_started
      loki:
        condition: service_started
    restart: no

  zipkin:
    image: openzipkin/zipkin:3.5.1
    container_name: zipkin
    ports:
      - "9411:9411"
    restart: no

  db-quiz:
    image: postgres:17.5-alpine3.22
    container_name: db-quiz
    ports:
      - "5432:5432"
    environment:
      - TZ=Asia/Almaty
      - PGTZ=Asia/Almaty
      - POSTGRES_DB=quiz_db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 --auth-host=scram-sha-256 --auth-local=scram-sha-256
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: no

  redis:
    image: redis:8.0.2-alpine3.21
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: no

  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,CLIENT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,CLIENT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: [ "CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --list >/dev/null 2>&1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: no

  db-auth:
    image: postgres:17.5-alpine3.22
    container_name: db-auth
    ports:
      - "5433:5432"
    environment:
      - TZ=Asia/Almaty
      - PGTZ=Asia/Almaty
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 --auth-host=scram-sha-256 --auth-local=scram-sha-256
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: no

  db-user:
    image: postgres:17.5-alpine3.22
    container_name: db-user
    ports:
      - "5434:5432"
    environment:
      - TZ=Asia/Almaty
      - PGTZ=Asia/Almaty
      - POSTGRES_DB=user_db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 --auth-host=scram-sha-256 --auth-local=scram-sha-256
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: no
