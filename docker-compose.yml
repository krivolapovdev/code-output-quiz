services:
  prometheus:
    image: prom/prometheus:v3.4.1
    container_name: prometheus
    profiles:
      - prod
      - dev
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    profiles:
      - prod
      - dev
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ./infrastructure/docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  config-server:
    container_name: config-server
    build:
      context: .
      dockerfile: infrastructure/docker/config-server/Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
    ports:
      - "8888:8888"

  eureka-server:
    container_name: eureka-server
    build:
      context: .
      dockerfile: infrastructure/docker/eureka-server/Dockerfile
    restart: unless-stopped
    environment:
      - CONFIG_SERVER=http://config-server:8888
      - EUREKA_SERVER=http://eureka-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy

  quiz-service:
    container_name: quiz-service
    build:
      context: .
      dockerfile: infrastructure/docker/quiz-service/Dockerfile
    restart: unless-stopped
    environment:
      - CONFIG_SERVER=http://config-server:8888
      - EUREKA_SERVER=http://eureka-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: infrastructure/docker/api-gateway/Dockerfile
    restart: unless-stopped
    environment:
      - CONFIG_SERVER=http://config-server:8888
      - EUREKA_SERVER=http://eureka-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8765/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - prod
    ports:
      - "8765:8765"
    depends_on:
      quiz-service:
        condition: service_healthy
